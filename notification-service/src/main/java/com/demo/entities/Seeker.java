package com.demo.entities;// default package
// Generated Jan 27, 2025, 4:56:06 PM by Hibernate Tools 4.3.6.Final

import jakarta.persistence.*;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Seeker generated by hbm2java
 */
@Entity
@Table(name = "seeker", catalog = "jobs")
public class Seeker implements java.io.Serializable {

	private Integer id;
	private User user;
	private String fullName;
	private String phone;
	private String address;
	private Date dob;
	private String gender;
	private Boolean status;
	private Date updateAt;
	private String avatar;
	private Set<Application> applications = new HashSet<Application>(0);
	private Set<Follow> follows = new HashSet<Follow>(0);
	private Set<Favorite> favorites = new HashSet<Favorite>(0);
	private Set<Cv> cvs = new HashSet<Cv>(0);

	public Seeker() {
	}

	public Seeker(User user) {
		this.user = user;
	}

	public Seeker(User user, String fullName, String phone, String address, Date dob, String gender, Boolean status,
                  Date updateAt, String avatar, Set<Application> applications, Set<Follow> follows, Set<Favorite> favorites,
                  Set<Cv> cvs) {
		this.user = user;
		this.fullName = fullName;
		this.phone = phone;
		this.address = address;
		this.dob = dob;
		this.gender = gender;
		this.status = status;
		this.updateAt = updateAt;
		this.avatar = avatar;
		this.applications = applications;
		this.follows = follows;
		this.favorites = favorites;
		this.cvs = cvs;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "full_name", length = 65535)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "phone", length = 65535)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "gender", length = 250)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_at", length = 19)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@Column(name = "avatar", length = 65535)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seeker")
	public Set<Application> getApplications() {
		return this.applications;
	}

	public void setApplications(Set<Application> applications) {
		this.applications = applications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seeker")
	public Set<Follow> getFollows() {
		return this.follows;
	}

	public void setFollows(Set<Follow> follows) {
		this.follows = follows;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seeker")
	public Set<Favorite> getFavorites() {
		return this.favorites;
	}

	public void setFavorites(Set<Favorite> favorites) {
		this.favorites = favorites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seeker")
	public Set<Cv> getCvs() {
		return this.cvs;
	}

	public void setCvs(Set<Cv> cvs) {
		this.cvs = cvs;
	}

}
