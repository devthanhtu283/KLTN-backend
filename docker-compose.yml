version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://172.29.160.1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafka-connect:
    image: debezium/connect:2.4
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - "9093:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"

  debezium-ui:
    image: debezium/debezium-ui:2.4
    container_name: debezium-ui
    ports:
      - "9094:8080"
    environment:
      KAFKA_CONNECT_URIS: http://kafka-connect:8083
    depends_on:
      - kafka-connect

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: tunh_source_mysql
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
    depends_on:
      - kafka
      - kafka-connect
  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
#  discovery-service:
#    image: discovery-service
#    container_name: discovery-service
#    build:
#      context: discovery-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    ports:
#      - "9999:9999"
#    restart: always
#    env_file:
#      - local.env
#
#  config-service:
#    image: config-service
#    container_name: config-service
#    build:
#      context: config-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8888:8888"
#    depends_on:
#      - discovery-service
#    restart: always
#    env_file:
#      - local.env
#  notification-service:
#    image: notification-service
#    container_name: notification-service
#    build:
#      context: notification-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8084:8084"
#    depends_on:
#      - discovery-service
#      - config-service
#    restart: always
#    env_file:
#      - local.env
#  quiz-service:
#    image: quiz-service
#    container_name: quiz-service
#    build:
#      context: quiz-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8082:8082"
#    depends_on:
#      - discovery-service
#      - config-service
#    restart: always
#    env_file:
#      - local.env
#  application-service:
#    image: application-service
#    container_name: application-service
#    build:
#      context: application-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      # SPRING_ELASTICSEARCH_HOST: host.docker.internal
#      # SPRING_ELASTICSEARCH_PORT: 9200
#    # extra_hosts:
#    #   - "host.docker.internal:host-gateway"
#    ports:
#      - "8085:8085"
#    depends_on:
#      - discovery-service
#      - config-service
#    restart: always
#    env_file:
#      - local.env
#  job-service:
#    image: job-service
#    container_name: job-service
#    build:
#      context: job-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATA_REDIS_HOST: redis
#      # SPRING_ELASTICSEARCH_HOST: host.docker.internal
#      # SPRING_ELASTICSEARCH_PORT: 9200
#    # extra_hosts:
#    #   - "host.docker.internal:host-gateway"
#    ports:
#      - "8083:8083"
#    depends_on:
#      - discovery-service
#      - config-service
#    restart: always
#    env_file:
#      - local.env
#  user-service:
#    image: user-service
#    container_name: user-service
#    build:
#      context: user-service
#      dockerfile: Dockerfile
#    volumes:
#      - ./user-static:/app/user-static
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_PROFILES_ACTIVE: docker
#      # SPRING_ELASTICSEARCH_HOST: host.docker.internal
#      # SPRING_ELASTICSEARCH_PORT: 9200
#    # extra_hosts:
#    #   - "host.docker.internal:host-gateway"
#    ports:
#      - "8081:8081"
#    depends_on:
#      - discovery-service
#      - config-service
#    restart: always
#    env_file:
#      - local.env
#  recommendation-service:
#    image: recommendation-service
#    container_name: recommendation-service
#    build:
#      context: ./recommendation-service
#      dockerfile: Dockerfile
#    restart: always
#    env_file:
#      - local.env

#  gateway-service:
#    image: gateway-service
#    container_name: gateway-service
#    build:
#      context: gateway-service
#      dockerfile: Dockerfile
#    networks:
#      - default
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8080:8080"
#    depends_on:
#      - discovery-service
#      - config-service
#      - user-service
#    restart: always
#    env_file:
#      - local.env
networks:
  default:
    driver: bridge

