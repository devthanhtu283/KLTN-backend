server.port=8080
server.servlet.context-path=
# Route cho user-service
spring.cloud.gateway.routes[0].id=user-route
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates=Path=/user/**
# Route cho quiz-service
spring.cloud.gateway.routes[1].id=quiz-route
spring.cloud.gateway.routes[1].uri=lb://quiz-service
spring.cloud.gateway.routes[1].predicates=Path=/quiz/**
# Route cho python-service
spring.cloud.gateway.routes[2].id=python-route
spring.cloud.gateway.routes[2].uri=lb://recommendation-service
spring.cloud.gateway.routes[2].predicates=Path=/python/**
# Route cho job-service
spring.cloud.gateway.routes[3].id=job-route
spring.cloud.gateway.routes[3].uri=lb://job-service
spring.cloud.gateway.routes[3].predicates=Path=/job/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0, JwtAuthenticationFilter
# Route cho notification-service
spring.cloud.gateway.routes[4].id=notification-route
spring.cloud.gateway.routes[4].uri=lb://notification-service
spring.cloud.gateway.routes[4].predicates=Path=/notification/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=0, JwtAuthenticationFilter
# Route cho notification-service
spring.cloud.gateway.routes[5].id=application-route
spring.cloud.gateway.routes[5].uri=lb://application-service
spring.cloud.gateway.routes[5].predicates=Path=/application/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=0, JwtAuthenticationFilter
spring.cloud.gateway.routes[6].id=job-static-route
spring.cloud.gateway.routes[6].uri=lb://job-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/job-static/assets/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[7].id=websocket-route
spring.cloud.gateway.routes[7].uri=ws://localhost:8081/ws-chat
spring.cloud.gateway.routes[7].predicates=Path=/ws-chat/**
spring.cloud.gateway.routes[8].id=user-static-route
spring.cloud.gateway.routes[8].uri=lb://user-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/user-static/assets/**
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1, JwtAuthenticationFilter
spring.cloud.gateway.globalcors.cors-configurations.[/ws-chat/**].allowed-origins=http://localhost:4200, http://localhost:4201, http://localhost:4202
spring.cloud.gateway.globalcors.cors-configurations.[/ws-chat/**].allowed-methods=GET,POST,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/ws-chat/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/ws-chat/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:4200, http://localhost:4201, http://localhost:4202
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600
# Route cho log-service (n?u c?n)
#spring.cloud.gateway.routes[2].id=log-route
#spring.cloud.gateway.routes[2].uri=lb://LOGSERVICE
#spring.cloud.gateway.routes[2].predicates=Path=/log/**
#spring.cloud.gateway.routes[2].filters=RewritePath=/log/(?<segment>.*), /$\{segment}
